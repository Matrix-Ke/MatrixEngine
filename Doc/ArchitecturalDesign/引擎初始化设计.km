{
    "root": {
        "data": {
            "id": "cjt4vqmqa9c0",
            "created": 1651886466911,
            "text": "初始化设计"
        },
        "children": [
            {
                "data": {
                    "id": "cjt4w8d0jao0",
                    "created": 1651886505505,
                    "text": "static变量相关",
                    "priority": null,
                    "expandState": "expand",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cjt5bma0qi80",
                            "created": 1651887711262,
                            "text": "全局变量、文件域的静态变量和类的静态成员变量\n在main之前执行初始化",
                            "layout": null,
                            "note": "全局变量、文件域的静态变量和类的静态成员变量在main执行之前的静态初始化过程中分配内存并初始化",
                            "progress": null,
                            "font-size": 10,
                            "expandState": "expand"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cjt62cyanoo0",
                                    "created": 1651889806794,
                                    "text": "static initialization: 静态初始化",
                                    "layout_right_offset": {
                                        "x": -6,
                                        "y": -9.333333333333314
                                    },
                                    "font-size": 10
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cjt64ziini80",
                                    "created": 1651890012634,
                                    "text": "dynamic initialization：动态初始化主要是指需要经过函数调用才能完成的初始化",
                                    "font-size": 10
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cjt7ia9v61k0",
                                    "created": 1651893875900,
                                    "text": "topic",
                                    "note": "。C中编译器会直接跳过这一个语句，因为在编译的时候已经对静态局部变量进行过分配空间并初始化，所以代码执行过程中根本不需要再次执行。而在C++中，编译器会在编译器分配内存后，在全局区域（当前静态局部变量的地址）附近同样分配一块空间，进行记录变量是否已经进行过初始化。"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cjt5jzkngo00",
                            "created": 1651888367116,
                            "text": "局部静态变量（一般为函数内的静态变量）",
                            "note": "* 第一次使用时分配内存并初始化。这里的变量包含内置数据类型和自定义类型的对象。\n",
                            "font-size": 10
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cjt5c717yy80",
                    "created": 1651887756442,
                    "text": "topic",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cjt5caz2b280",
                    "created": 1651887765019,
                    "text": "topic",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cjt5cgctyqg0",
                    "created": 1651887776735,
                    "text": "topic",
                    "layout": null
                },
                "children": []
            }
        ]
    },
    "template": "right",
    "theme": "fresh-green-compat",
    "version": "1.4.43"
}